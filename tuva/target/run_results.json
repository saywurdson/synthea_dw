{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.7", "generated_at": "2024-02-17T06:17:10.145856Z", "invocation_id": "da18cd0d-6c3b-40d2-9a09-be8e914171eb", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:01.196688Z", "completed_at": "2024-02-17T06:17:01.203278Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:01.224292Z", "completed_at": "2024-02-17T06:17:01.329191Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.13921856880187988, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.condition", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"condition\"", "relation_name": "\"synthea\".\"main\".\"condition\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:01.199873Z", "completed_at": "2024-02-17T06:17:01.222278Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:01.237787Z", "completed_at": "2024-02-17T06:17:01.334587Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.14396929740905762, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.eligibility", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"eligibility\"", "relation_name": "\"synthea\".\"main\".\"eligibility\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:01.154719Z", "completed_at": "2024-02-17T06:17:01.161566Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:01.176313Z", "completed_at": "2024-02-17T06:17:04.461268Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 3.3282907009124756, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.ccsr__procedure_category_map", "compiled": true, "compiled_code": "\n\nselect \n    icd_10_pcs as code,\n    icd_10_pcs_description as code_description,\n    prccsr as ccsr_category,\n    left(prccsr, 3) as ccsr_parent_category,\n    prccsr_description as ccsr_category_description,\n    clinical_domain,\n   '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom \"synthea\".\"ccsr\".\"_value_set_prccsr_v2023_1_cleaned_map\"", "relation_name": "\"synthea\".\"ccsr\".\"procedure_category_map\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:01.358130Z", "completed_at": "2024-02-17T06:17:01.413771Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:01.416485Z", "completed_at": "2024-02-17T06:17:04.463644Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 3.1157326698303223, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.lab_result", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"lab_result\"", "relation_name": "\"synthea\".\"main\".\"lab_result\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:01.146589Z", "completed_at": "2024-02-17T06:17:01.161135Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:01.164772Z", "completed_at": "2024-02-17T06:17:04.464691Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.333405017852783, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.ccsr__dx_vertical_pivot", "compiled": true, "compiled_code": "\n\nwith codes as (\n    \n    select\n        icd_10_cm_code as code, \n        icd_10_cm_code_description as code_description,\n        -- loop to generate columns for CCSR categories 1-6\n        ccsr_category_1,\n        ccsr_category_1_description,\n        ccsr_category_2,\n        ccsr_category_2_description,\n        ccsr_category_3,\n        ccsr_category_3_description,\n        ccsr_category_4,\n        ccsr_category_4_description,\n        ccsr_category_5,\n        ccsr_category_5_description,\n        ccsr_category_6,\n        ccsr_category_6_description,\n        default_ccsr_category_ip,\n        default_ccsr_category_op\n    from \"synthea\".\"ccsr\".\"_value_set_dxccsr_v2023_1_cleaned_map\"\n\n), long_union as (\n    -- generate select & union statements to pivot category columns to rows\n    \n    select \n        code,\n        code_description,\n        left(ccsr_category_1, 3) as ccsr_parent_category,\n        ccsr_category_1 as ccsr_category,\n        ccsr_category_1_description as ccsr_category_description,\n        1 as ccsr_category_rank,\n        (ccsr_category_1 = default_ccsr_category_ip) as is_ip_default_category,\n        (ccsr_category_1 = default_ccsr_category_op) as is_op_default_category\n    from codes \n    union all\n    select \n        code,\n        code_description,\n        left(ccsr_category_2, 3) as ccsr_parent_category,\n        ccsr_category_2 as ccsr_category,\n        ccsr_category_2_description as ccsr_category_description,\n        2 as ccsr_category_rank,\n        (ccsr_category_2 = default_ccsr_category_ip) as is_ip_default_category,\n        (ccsr_category_2 = default_ccsr_category_op) as is_op_default_category\n    from codes \n    union all\n    select \n        code,\n        code_description,\n        left(ccsr_category_3, 3) as ccsr_parent_category,\n        ccsr_category_3 as ccsr_category,\n        ccsr_category_3_description as ccsr_category_description,\n        3 as ccsr_category_rank,\n        (ccsr_category_3 = default_ccsr_category_ip) as is_ip_default_category,\n        (ccsr_category_3 = default_ccsr_category_op) as is_op_default_category\n    from codes \n    union all\n    select \n        code,\n        code_description,\n        left(ccsr_category_4, 3) as ccsr_parent_category,\n        ccsr_category_4 as ccsr_category,\n        ccsr_category_4_description as ccsr_category_description,\n        4 as ccsr_category_rank,\n        (ccsr_category_4 = default_ccsr_category_ip) as is_ip_default_category,\n        (ccsr_category_4 = default_ccsr_category_op) as is_op_default_category\n    from codes \n    union all\n    select \n        code,\n        code_description,\n        left(ccsr_category_5, 3) as ccsr_parent_category,\n        ccsr_category_5 as ccsr_category,\n        ccsr_category_5_description as ccsr_category_description,\n        5 as ccsr_category_rank,\n        (ccsr_category_5 = default_ccsr_category_ip) as is_ip_default_category,\n        (ccsr_category_5 = default_ccsr_category_op) as is_op_default_category\n    from codes \n    union all\n    select \n        code,\n        code_description,\n        left(ccsr_category_6, 3) as ccsr_parent_category,\n        ccsr_category_6 as ccsr_category,\n        ccsr_category_6_description as ccsr_category_description,\n        6 as ccsr_category_rank,\n        (ccsr_category_6 = default_ccsr_category_ip) as is_ip_default_category,\n        (ccsr_category_6 = default_ccsr_category_op) as is_op_default_category\n    from codes \n    \n\n)\n\nselect distinct\n    *,\n    '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom long_union\n-- as not all diagnosis codes have multiple categories, we can discard nulls\nwhere ccsr_category is not null", "relation_name": "\"synthea\".\"ccsr\".\"dx_vertical_pivot\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:01.347203Z", "completed_at": "2024-02-17T06:17:01.355377Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:01.360407Z", "completed_at": "2024-02-17T06:17:04.465706Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.196073532104492, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.encounter", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"encounter\"", "relation_name": "\"synthea\".\"main\".\"encounter\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.551291Z", "completed_at": "2024-02-17T06:17:04.563745Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.567636Z", "completed_at": "2024-02-17T06:17:04.638951Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0978844165802002, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.location", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"location\"", "relation_name": "\"synthea\".\"main\".\"location\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.561756Z", "completed_at": "2024-02-17T06:17:04.567302Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.578272Z", "completed_at": "2024-02-17T06:17:04.653128Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.10732650756835938, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.medication", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"medication\"", "relation_name": "\"synthea\".\"main\".\"medication\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.555927Z", "completed_at": "2024-02-17T06:17:04.565144Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.571200Z", "completed_at": "2024-02-17T06:17:04.654657Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.10914969444274902, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.medical_claim", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"medical_claim\"", "relation_name": "\"synthea\".\"main\".\"medical_claim\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.661024Z", "completed_at": "2024-02-17T06:17:04.667550Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.671195Z", "completed_at": "2024-02-17T06:17:04.732873Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.07994699478149414, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.observation", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"observation\"", "relation_name": "\"synthea\".\"main\".\"observation\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.675791Z", "completed_at": "2024-02-17T06:17:04.683354Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.685828Z", "completed_at": "2024-02-17T06:17:04.734702Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.06811761856079102, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.patient", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"patient\"", "relation_name": "\"synthea\".\"main\".\"patient\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.678940Z", "completed_at": "2024-02-17T06:17:04.684974Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.691557Z", "completed_at": "2024-02-17T06:17:04.747849Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08148717880249023, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.pharmacy_claim", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"pharmacy_claim\"", "relation_name": "\"synthea\".\"main\".\"pharmacy_claim\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.752582Z", "completed_at": "2024-02-17T06:17:04.759959Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.762558Z", "completed_at": "2024-02-17T06:17:04.832266Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.08838176727294922, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.practitioner", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"practitioner\"", "relation_name": "\"synthea\".\"main\".\"practitioner\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.755399Z", "completed_at": "2024-02-17T06:17:04.761659Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.767575Z", "completed_at": "2024-02-17T06:17:04.833561Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.08948326110839844, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.procedure", "compiled": true, "compiled_code": "select *\nfrom \"synthea\".\"tuva_input\".\"procedure\"", "relation_name": "\"synthea\".\"main\".\"procedure\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.773711Z", "completed_at": "2024-02-17T06:17:04.791169Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.794488Z", "completed_at": "2024-02-17T06:17:04.868767Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.11484193801879883, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034__performance_period", "compiled": true, "compiled_code": "\n/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\nwith period_end as (\n\n    select\n        cast(\n        \n\n    \n\n    date_trunc('year', now()) + ((interval '1 year') * (1))\n\n + ((interval '1 day') * (-1))\n\n\n        as date)\n        \n         as performance_period_end\n)\n\n/*\n    set performance period begin to a year and a day prior\n    for a complete calendar year\n*/\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    \n\n    performance_period_end + ((interval '1 year') * (-1))\n\n + ((interval '1 day') * (1))\n\n as performance_period_begin\n    from period_end\n\n)\n\n/*\n    set performance lookback periods for each type of test\n\n    during the measurement period:\n    - Fecal occult blood test (FOBT) during the measurement period\n\n    during the measurement period or the two years prior:\n    - Fecal immunochemical DNA test (FIT-DNA)\n\n    during the measurement period or the four years prior:\n    - Flexible sigmoidoscopy\n    - Computed tomography (CT) colonography\n\n    during the measurement period or the nine years prior:\n    - Colonoscopy\n\n*/\n, period_lookback as (\n\n    select\n          performance_period_end\n        , performance_period_begin\n        , \n\n    performance_period_end + ((interval '1 year') * (-2))\n\n as performance_period_begin_1yp\n        , \n\n    performance_period_end + ((interval '1 year') * (-3))\n\n as performance_period_begin_2yp\n        , \n\n    performance_period_end + ((interval '1 year') * (-5))\n\n as performance_period_begin_4yp\n        , \n\n    performance_period_end + ((interval '1 year') * (-10))\n\n as performance_period_begin_9yp\n    from period_begin\n\n)\n\nselect\n      cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_end as date) as performance_period_end\n    , cast(performance_period_begin_1yp as date) as performance_period_begin_1yp\n    , cast(performance_period_begin_2yp as date) as performance_period_begin_2yp\n    , cast(performance_period_begin_4yp as date) as performance_period_begin_4yp\n    , cast(performance_period_begin_9yp as date) as performance_period_begin_9yp\nfrom period_lookback", "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034__performance_period\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.558609Z", "completed_at": "2024-02-17T06:17:04.566579Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.574971Z", "completed_at": "2024-02-17T06:17:04.916108Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3809628486633301, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.medical_claim_expanded", "compiled": true, "compiled_code": "\n\n\nselect *\nfrom \"synthea\".\"tuva_input\".\"medical_claim\"", "relation_name": "\"synthea\".\"claims_expanded\".\"medical_claim_expanded\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.869541Z", "completed_at": "2024-02-17T06:17:04.882337Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.889133Z", "completed_at": "2024-02-17T06:17:04.912768Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.09112977981567383, "adapter_response": {}, "message": "Runtime Error in model core__stg_clinical_condition (models/core/staging/core__stg_clinical_condition.sql)\n  Binder Error: Column \"normalized_code_type\" referenced that exists in the SELECT clause - but this column cannot be referenced before it is defined", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_condition", "compiled": true, "compiled_code": "\n\nselect\n    cast(condition_id as TEXT ) as condition_id\n    , cast(patient_id as TEXT ) as patient_id\n    , cast(encounter_id as TEXT ) as encounter_id\n    , cast(claim_id as TEXT ) as claim_id\n    , try_cast( recorded_date as date ) as recorded_date\n    , try_cast( onset_date as date ) as onset_date\n    , try_cast( resolved_date as date ) as resolved_date\n    , cast(status as TEXT ) as status\n    , cast(condition_type as TEXT ) as condition_type\n    , cast(source_code_type as TEXT ) as source_code_type\n    , cast(source_code as TEXT ) as source_code\n    , cast(source_description as TEXT ) as source_description\n    , cast(normalized_code_type as TEXT ) as normalized_code_type\n    , cast(normalized_code as TEXT ) as normalized_code\n    , cast(normalized_description as TEXT ) as normalized_description\n    , cast(condition_rank as integer ) as condition_rank\n    , cast(present_on_admit_code as TEXT ) as present_on_admit_code\n    , cast(present_on_admit_description as TEXT ) as present_on_admit_description\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"condition\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_condition\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.860050Z", "completed_at": "2024-02-17T06:17:04.879729Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.883812Z", "completed_at": "2024-02-17T06:17:04.985722Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13799524307250977, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372__performance_period", "compiled": true, "compiled_code": "/*\n    set performance period end to the end of the current calendar year\n    or use the quality_measures_period_end variable if provided\n*/\nwith period_end as (\n\n    select\n        cast(\n        \n\n    \n\n    date_trunc('year', now()) + ((interval '1 year') * (1))\n\n + ((interval '1 day') * (-1))\n\n\n        as date)\n        \n         as performance_period_end\n)\n\n/*\n    set performance period begin to a year and a day prior\n    for a complete calendar year\n*/\n, period_begin as (\n\n    select\n          performance_period_end\n        , \n\n    \n\n    performance_period_end + ((interval '1 year') * (-1))\n\n + ((interval '1 day') * (1))\n\n as performance_period_begin\n    from period_end\n\n)\n\n/*\n    set performance lookback period to 27 months prior to the end of the\n    performance period\n*/\n, period_lookback as (\n\n    select\n          performance_period_end\n        , performance_period_begin\n        , \n\n    performance_period_end + ((interval '1 month') * (-27))\n\n as performance_period_lookback\n    from period_begin\n\n\n)\n\nselect\n      cast((select id\nfrom \"synthea\".\"quality_measures\".\"_value_set_measures\"\nwhere id = 'NQF2372') as TEXT) as measure_id\n    , cast((select name\nfrom \"synthea\".\"quality_measures\".\"_value_set_measures\"\nwhere id = 'NQF2372') as TEXT) as measure_name\n    , cast((select version\nfrom \"synthea\".\"quality_measures\".\"_value_set_measures\"\nwhere id = 'NQF2372') as TEXT) as measure_version\n    , cast(performance_period_end as date) as performance_period_end\n    , cast(performance_period_begin as date) as performance_period_begin\n    , cast(performance_period_lookback as date) as performance_period_lookback\nfrom period_lookback", "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372__performance_period\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.920219Z", "completed_at": "2024-02-17T06:17:04.937101Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.942470Z", "completed_at": "2024-02-17T06:17:04.981976Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2009885311126709, "adapter_response": {}, "message": "Runtime Error in model core__stg_clinical_lab_result (models/core/staging/core__stg_clinical_lab_result.sql)\n  Binder Error: Column \"lab_result_id\" referenced that exists in the SELECT clause - but this column cannot be referenced before it is defined", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_lab_result", "compiled": true, "compiled_code": "\n\nselect\n    cast(lab_result_id as TEXT ) as lab_result_id\n    , cast(patient_id as TEXT ) as patient_id\n    , cast(encounter_id as TEXT ) as encounter_id\n    , cast(accession_number as TEXT ) as accession_number\n    , cast(source_code_type as TEXT ) as source_code_type\n    , cast(source_code as TEXT ) as source_code\n    , cast(source_description as TEXT ) as source_description\n    , cast(source_component as TEXT ) as source_component\n    , cast(normalized_code_type as TEXT ) as normalized_code_type\n    , cast(normalized_code as TEXT ) as normalized_code\n    , cast(normalized_description as TEXT ) as normalized_description\n    , cast(normalized_component as TEXT ) as normalized_component\n    , cast(status as TEXT ) as status\n    , cast(result as TEXT ) as result\n    , try_cast( result_date as date ) as result_date\n    , try_cast( collection_date as date ) as collection_date\n    , cast(source_units as TEXT ) as source_units\n    , cast(normalized_units as TEXT ) as normalized_units\n    , cast(source_reference_range_low as TEXT ) as source_reference_range_low\n    , cast(source_reference_range_high as TEXT ) as source_reference_range_high\n    , cast(normalized_reference_range_low as TEXT ) as normalized_reference_range_low\n    , cast(normalized_reference_range_high as TEXT ) as normalized_reference_range_high\n    , cast(source_abnormal_flag as integer ) as source_abnormal_flag\n    , cast(normalized_abnormal_flag as integer ) as normalized_abnormal_flag\n    , cast(specimen as TEXT ) as specimen\n    , cast(ordering_practitioner_id as TEXT ) as ordering_practitioner_id\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"lab_result\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_lab_result\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.953498Z", "completed_at": "2024-02-17T06:17:04.968940Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.973200Z", "completed_at": "2024-02-17T06:17:05.195170Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2503643035888672, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_encounter", "compiled": true, "compiled_code": "\n\nselect \n    cast(encounter_id as TEXT ) as encounter_id\n    , cast(patient_id as TEXT ) as patient_id\n    , cast(encounter_type as TEXT ) as encounter_type\n    , try_cast( encounter_start_date as date ) as encounter_start_date\n    , try_cast( encounter_end_date as date ) as encounter_end_date\n    , cast(length_of_stay as integer ) as length_of_stay\n    , cast(admit_source_code as TEXT ) as admit_source_code\n    , cast(admit_source_description as TEXT ) as admit_source_description\n    , cast(admit_type_code as TEXT ) as admit_type_code\n    , cast(admit_type_description as TEXT ) as admit_type_description\n    , cast(discharge_disposition_code as TEXT ) as discharge_disposition_code\n    , cast(discharge_disposition_description as TEXT ) as discharge_disposition_description\n    , cast(attending_provider_id as TEXT ) as attending_provider_id\n    , cast(facility_npi as TEXT ) as facility_npi\n    , cast(primary_diagnosis_code_type as TEXT ) as primary_diagnosis_code_type\n    , cast(primary_diagnosis_code as TEXT ) as primary_diagnosis_code\n    , cast(primary_diagnosis_description as TEXT ) as primary_diagnosis_description\n    , cast(ms_drg_code as TEXT ) as ms_drg_code\n    , cast(ms_drg_description as TEXT ) as ms_drg_description \n    , cast(apr_drg_code as TEXT ) as apr_drg_code\n    , cast(apr_drg_description as TEXT ) as apr_drg_description\n    , cast(paid_amount as numeric(28,6) ) as paid_amount\n    , cast(allowed_amount as numeric(28,6) ) as allowed_amount\n    , cast(charge_amount as numeric(28,6) ) as charge_amount\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"encounter\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_encounter\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:04.976660Z", "completed_at": "2024-02-17T06:17:04.988726Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:04.993855Z", "completed_at": "2024-02-17T06:17:05.203825Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.23796701431274414, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_location", "compiled": true, "compiled_code": "\n\nselect\n    cast(location_id as TEXT ) as location_id\n    , cast(npi as TEXT ) as npi\n    , cast(name as TEXT ) as name\n    , cast(facility_type as TEXT ) as facility_type\n    , cast(parent_organization as TEXT ) as parent_organization\n    , cast(address as TEXT ) as address\n    , cast(city as TEXT ) as city\n    , cast(state as TEXT ) as state\n    , cast(zip_code as TEXT ) as zip_code\n    , cast(latitude as float ) as latitude\n    , cast(longitude as float ) as longitude\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"location\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_location\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.169302Z", "completed_at": "2024-02-17T06:17:05.182337Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.184868Z", "completed_at": "2024-02-17T06:17:05.216743Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08297324180603027, "adapter_response": {}, "message": "Runtime Error in model core__stg_clinical_observation (models/core/staging/core__stg_clinical_observation.sql)\n  Binder Error: Column \"observation_date\" referenced that exists in the SELECT clause - but this column cannot be referenced before it is defined", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_observation", "compiled": true, "compiled_code": "\n\n\nselect\n    cast(observation_id as TEXT ) as observation_id\n    , cast(patient_id as TEXT ) as patient_id\n    , cast(encounter_id as TEXT ) as encounter_id\n    , cast(panel_id as TEXT ) as panel_id\n    , try_cast( observation_date as date ) as observation_date\n    , cast(observation_type as TEXT ) as observation_type\n    , cast(source_code_type as TEXT ) as source_code_type\n    , cast(source_code as TEXT ) as source_code\n    , cast(source_description as TEXT ) as source_description\n    , cast(normalized_code_type as TEXT ) as normalized_code_type\n    , cast(normalized_code as TEXT ) as normalized_code\n    , cast(normalized_description as TEXT ) as normalized_description\n    , cast(result as TEXT ) as result\n    , cast(source_units as TEXT ) as source_units\n    , cast(normalized_units as TEXT ) as normalized_units\n    , cast(source_reference_range_low as TEXT ) as source_reference_range_low\n    , cast(source_reference_range_high as TEXT ) as source_reference_range_high\n    , cast(normalized_reference_range_low as TEXT ) as normalized_reference_range_low\n    , cast(normalized_reference_range_high as TEXT ) as normalized_reference_range_high\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"observation\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_observation\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.120245Z", "completed_at": "2024-02-17T06:17:05.134796Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.146612Z", "completed_at": "2024-02-17T06:17:05.248772Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2155921459197998, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_medication", "compiled": true, "compiled_code": "\n\nselect\n    cast(medication_id as TEXT ) as medication_id\n    , cast(patient_id as TEXT ) as patient_id\n    , cast(encounter_id as TEXT ) as encounter_id\n    , try_cast( dispensing_date as date ) as dispensing_date\n    , try_cast( prescribing_date as date ) as prescribing_date\n    , cast(source_code_type as TEXT ) as source_code_type\n    , cast(source_code as TEXT ) as source_code\n    , cast(source_description as TEXT ) as source_description\n    , cast(ndc_code as TEXT ) as ndc_code\n    , cast(ndc_description as TEXT ) as ndc_description\n    , cast(rxnorm_code as TEXT ) as rxnorm_code\n    , cast(rxnorm_description as TEXT ) as rxnorm_description \n    , cast(atc_code as TEXT ) as atc_code\n    , cast(atc_description as TEXT ) as atc_description\n    , cast(route as TEXT ) as route\n    , cast(strength as TEXT ) as strength\n    , cast(quantity as integer ) as quantity\n    , cast(quantity_unit as TEXT ) as quantity_unit\n    , cast(days_supply as integer ) as days_supply\n    , cast(practitioner_id as TEXT ) as practitioner_id\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"medication\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_medication\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.219478Z", "completed_at": "2024-02-17T06:17:05.236189Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.241554Z", "completed_at": "2024-02-17T06:17:05.433512Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.223344087600708, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_patient", "compiled": true, "compiled_code": "\n\nselect\n    cast(patient_id as TEXT ) as patient_id\n    , cast(first_name as TEXT ) as first_name\n    , cast(last_name as TEXT ) as last_name\n    , cast(sex as TEXT ) as sex\n    , cast(race as TEXT ) as race\n    , try_cast( birth_date as date ) as birth_date\n    , try_cast( death_date as date ) as death_date\n    , cast(death_flag as integer ) as death_flag\n    , cast(address as TEXT ) as address\n    , cast(city as TEXT ) as city\n    , cast(state as TEXT ) as state\n    , cast(zip_code as TEXT ) as zip_code\n    , cast(county as TEXT ) as county\n    , cast(latitude as float ) as latitude\n    , cast(longitude as float ) as longitude\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"patient\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_patient\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.358048Z", "completed_at": "2024-02-17T06:17:05.367142Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.378675Z", "completed_at": "2024-02-17T06:17:05.454563Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.12229108810424805, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_practitioner", "compiled": true, "compiled_code": "\n\nselect\n    cast(practitioner_id as TEXT ) as practitioner_id\n    , cast(npi as TEXT ) as npi\n    , cast(first_name as TEXT ) as first_name\n    , cast(last_name as TEXT ) as last_name\n    , cast(practice_affiliation as TEXT ) as practice_affiliation\n    , cast(specialty as TEXT ) as specialty\n    , cast(sub_specialty as TEXT ) as sub_specialty\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"practitioner\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_practitioner\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.368265Z", "completed_at": "2024-02-17T06:17:05.384792Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.395357Z", "completed_at": "2024-02-17T06:17:05.457348Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.09460020065307617, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.core__stg_clinical_procedure", "compiled": true, "compiled_code": "\n\nselect\n    cast(procedure_id as TEXT ) as procedure_id \n    , cast(patient_id as TEXT ) as patient_id\n    , cast(encounter_id as TEXT ) as encounter_id\n    , cast(claim_id as TEXT ) as claim_id\n    , try_cast( procedure_date as date ) as procedure_date\n    , cast(source_code_type as TEXT ) as source_code_type\n    , cast(source_code as TEXT ) as source_code\n    , cast(source_description as TEXT ) as source_description\n    , cast(normalized_code_type as TEXT ) as normalized_code_type\n    , cast(normalized_code as TEXT ) as normalized_code\n    , cast(normalized_description as TEXT ) as normalized_description\n    , cast(modifier_1 as TEXT ) as modifier_1\n    , cast(modifier_2 as TEXT ) as modifier_2\n    , cast(modifier_3 as TEXT ) as modifier_3\n    , cast(modifier_4 as TEXT ) as modifier_4\n    , cast(modifier_5 as TEXT ) as modifier_5\n    , cast(practitioner_id as TEXT ) as practitioner_id\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as timestamp ) as tuva_last_run\nfrom \"synthea\".\"main\".\"procedure\"", "relation_name": "\"synthea\".\"core\".\"_stg_clinical_procedure\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__lab_result", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"lab_result\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.596539Z", "completed_at": "2024-02-17T06:17:05.622869Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.626358Z", "completed_at": "2024-02-17T06:17:05.656081Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08664751052856445, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_admit_type_voting (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_admit_type_voting.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_admit_type_voting", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), normalize as(\n    select \n        med.claim_id\n        , med.data_source\n        , admit.admit_type_code\n    from __dbt__cte__normalized_input__stg_medical_claim med\n    inner join \"synthea\".\"terminology\".\"admit_type\" admit\n        on med.admit_type_code = admit.admit_type_code\n    where claim_type = 'institutional'\n)\n, distinct_counts as(\n    select \n        claim_id\n        , data_source\n        , admit_type_code\n        , count(*) as admit_type_occurrence_count\n    from normalize\n    where admit_type_code is not null\n    group by \n        claim_id\n        , data_source\n        , admit_type_code\n)\n\n, occurence_comparison as(\n    select\n        claim_id\n        , data_source\n        , 'admit_type_code' as column_name\n        , admit_type_code as normalized_code\n        , admit_type_occurrence_count as occurrence_count\n        , coalesce(lead(admit_type_occurrence_count) \n            over (partition by claim_id, data_source order by admit_type_occurrence_count desc),0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source order by admit_type_occurrence_count desc) as occurrence_row_count\n    from distinct_counts dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_admit_type_normalize_voting\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.584505Z", "completed_at": "2024-02-17T06:17:05.623398Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.630228Z", "completed_at": "2024-02-17T06:17:05.657583Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.09351515769958496, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_admit_source_voting (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_admit_source_voting.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_admit_source_voting", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), normalize as(\n    select \n        med.claim_id\n        , med.data_source\n        , admit.admit_source_code\n    from __dbt__cte__normalized_input__stg_medical_claim med\n    inner join \"synthea\".\"terminology\".\"admit_source\" admit\n        on med.admit_source_code = admit.admit_source_code\n    where claim_type = 'institutional'\n)\n, distinct_counts as(\n    select \n        claim_id\n        , data_source\n        , admit_source_code\n        , count(*) as admit_source_occurrence_count\n    from normalize\n    where admit_source_code is not null\n    group by \n        claim_id\n        , data_source\n        , admit_source_code\n)\n\n, occurence_comparison as(\n    select\n        claim_id\n        , data_source\n        , 'admit_source_code' as column_name\n        , admit_source_code as normalized_code\n        , admit_source_occurrence_count as occurrence_count\n        , coalesce(lead(admit_source_occurrence_count) \n            over (partition by claim_id, data_source order by admit_source_occurrence_count desc),0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source order by admit_source_occurrence_count desc) as occurrence_row_count\n    from distinct_counts dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_admit_source_voting\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.611895Z", "completed_at": "2024-02-17T06:17:05.625306Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.633466Z", "completed_at": "2024-02-17T06:17:05.659767Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06518268585205078, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_apr_drg_voting (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_apr_drg_voting.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_apr_drg_voting", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), normalize as(\n    select \n        med.claim_id\n        , med.data_source\n        , apr.apr_drg_code\n    from __dbt__cte__normalized_input__stg_medical_claim med\n    inner join \"synthea\".\"terminology\".\"apr_drg\" apr\n        on med.apr_drg_code = apr.apr_drg_code\n    where claim_type = 'institutional'\n)\n, distinct_counts as(\n    select \n        claim_id\n        , data_source\n        , apr_drg_code\n        , count(*) as apr_drg_occurrence_count\n    from normalize\n    where apr_drg_code is not null\n    group by \n        claim_id\n        , data_source\n        , apr_drg_code\n)\n\n, occurence_comparison as(\n    select\n        claim_id\n        , data_source\n        , 'apr_drg_code' as column_name\n        , apr_drg_code as normalized_code\n        , apr_drg_occurrence_count as occurrence_count\n        , coalesce(lead(apr_drg_occurrence_count) \n            over (partition by claim_id, data_source order by apr_drg_occurrence_count desc),0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source order by apr_drg_occurrence_count desc) as occurrence_row_count\n    from distinct_counts dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_apr_drg_voting\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.387613Z", "completed_at": "2024-02-17T06:17:05.403025Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.406958Z", "completed_at": "2024-02-17T06:17:05.778864Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.40424084663391113, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_eligibility_dates_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_eligibility as (\n\n\n\nselect\n      patient_id\n    , patient_id||data_source||payer||plan||enrollment_start_date||enrollment_end_date as patient_id_key\n    , member_id\n    , gender\n    , race\n    , birth_date\n    , death_date\n    , death_flag\n    , enrollment_start_date\n    , enrollment_end_date\n    , payer\n    , payer_type\n    , plan\n    , original_reason_entitlement_code\n    , dual_status_code\n    , medicare_status_code\n    , first_name\n    , last_name\n    , address\n    , city\n    , state\n    , zip_code\n    , phone\n    , data_source\nfrom \"synthea\".\"main\".\"eligibility\"\n) select distinct\n  elig.patient_id\n  , elig.patient_id||elig.data_source||elig.payer||elig.plan||elig.enrollment_start_date||elig.enrollment_end_date as patient_id_key\n  , cal_dob.full_date as normalized_birth_date\n  , cal_death.full_date as normalized_death_date\n  , cal_enroll_start.full_date as normalized_enrollment_start_date\n  , cal_enroll_end.full_date as normalized_enrollment_end_date\n  , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_eligibility elig\nleft join \"synthea\".\"terminology\".\"calendar\" cal_dob\n    on elig.birth_date = cal_dob.full_date\nleft join \"synthea\".\"terminology\".\"calendar\" cal_death\n    on elig.death_date = cal_death.full_date\nleft join \"synthea\".\"terminology\".\"calendar\" cal_enroll_start\n    on elig.enrollment_start_date = cal_enroll_start.full_date\nleft join \"synthea\".\"terminology\".\"calendar\" cal_enroll_end\n    on elig.enrollment_end_date = cal_enroll_end.full_date", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_eligibility_dates_normalize\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.686649Z", "completed_at": "2024-02-17T06:17:05.700390Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.748549Z", "completed_at": "2024-02-17T06:17:05.779448Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.11127066612243652, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_bill_type_voting (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_bill_type_voting.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_bill_type_voting", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), normalize as(\n    select \n        med.claim_id\n        , med.data_source\n        , bill.bill_type_code\n    from __dbt__cte__normalized_input__stg_medical_claim med\n    inner join \"synthea\".\"terminology\".\"bill_type\" bill\n        on med.bill_type_code = bill.bill_type_code\n    where claim_type = 'institutional'\n)\n, distinct_counts as(\n    select \n        claim_id\n        , data_source\n        , bill_type_code\n        , count(*) as bill_type_occurrence_count\n    from normalize\n    where bill_type_code is not null\n    group by \n        claim_id\n        , data_source\n        , bill_type_code\n)\n\n, occurence_comparison as(\n    select\n        claim_id\n        , data_source\n        , 'bill_type_code' as column_name\n        , bill_type_code as normalized_code\n        , bill_type_occurrence_count as occurrence_count\n        , coalesce(lead(bill_type_occurrence_count) \n            over (partition by claim_id, data_source order by bill_type_occurrence_count desc),0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source order by bill_type_occurrence_count desc) as occurrence_row_count\n    from distinct_counts dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_bill_type_voting\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.717539Z", "completed_at": "2024-02-17T06:17:05.748187Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.753502Z", "completed_at": "2024-02-17T06:17:05.780897Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.18478727340698242, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_discharge_disposition_voting (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_discharge_disposition_voting.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_discharge_disposition_voting", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), normalize as(\n    select \n        med.claim_id\n        , med.data_source\n        , disch.discharge_disposition_code\n    from __dbt__cte__normalized_input__stg_medical_claim med\n    inner join \"synthea\".\"terminology\".\"discharge_disposition\" disch\n        on med.discharge_disposition_code = disch.discharge_disposition_code\n    where claim_type = 'institutional'\n)\n, distinct_counts as(\n    select \n        claim_id\n        , data_source\n        , discharge_disposition_code\n        , count(*) as discharge_disposition_occurrence_count\n    from normalize\n    where discharge_disposition_code is not null\n    group by \n        claim_id\n        , data_source\n        , discharge_disposition_code\n)\n\n, occurence_comparison as(\n    select\n        claim_id\n        , data_source\n        , 'discharge_disposition_code' as column_name\n        , discharge_disposition_code as normalized_code\n        , discharge_disposition_occurrence_count as occurrence_count\n        , coalesce(lead(discharge_disposition_occurrence_count) \n            over (partition by claim_id, data_source order by discharge_disposition_occurrence_count desc),0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source order by discharge_disposition_occurrence_count desc) as occurrence_row_count\n    from distinct_counts dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_discharge_disposition_voting\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.700813Z", "completed_at": "2024-02-17T06:17:05.751157Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.756256Z", "completed_at": "2024-02-17T06:17:05.782253Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.19796371459960938, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_diagnosis_code_normalize (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_diagnosis_code_normalize.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_diagnosis_code_normalize", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), pivot_diagnosis as(\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_1'  as diagnosis_column\n        ,  diagnosis_code_1  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_2'  as diagnosis_column\n        ,  diagnosis_code_2  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_3'  as diagnosis_column\n        ,  diagnosis_code_3  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_4'  as diagnosis_column\n        ,  diagnosis_code_4  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_5'  as diagnosis_column\n        ,  diagnosis_code_5  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_6'  as diagnosis_column\n        ,  diagnosis_code_6  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_7'  as diagnosis_column\n        ,  diagnosis_code_7  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_8'  as diagnosis_column\n        ,  diagnosis_code_8  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_9'  as diagnosis_column\n        ,  diagnosis_code_9  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_10'  as diagnosis_column\n        ,  diagnosis_code_10  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_11'  as diagnosis_column\n        ,  diagnosis_code_11  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_12'  as diagnosis_column\n        ,  diagnosis_code_12  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_13'  as diagnosis_column\n        ,  diagnosis_code_13  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_14'  as diagnosis_column\n        ,  diagnosis_code_14  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_15'  as diagnosis_column\n        ,  diagnosis_code_15  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_16'  as diagnosis_column\n        ,  diagnosis_code_16  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_17'  as diagnosis_column\n        ,  diagnosis_code_17  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_18'  as diagnosis_column\n        ,  diagnosis_code_18  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_19'  as diagnosis_column\n        ,  diagnosis_code_19  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_20'  as diagnosis_column\n        ,  diagnosis_code_20  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_21'  as diagnosis_column\n        ,  diagnosis_code_21  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_22'  as diagnosis_column\n        ,  diagnosis_code_22  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_23'  as diagnosis_column\n        ,  diagnosis_code_24  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_24'  as diagnosis_column\n        ,  diagnosis_code_24  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , diagnosis_code_type\n        , 'diagnosis_code_25'  as diagnosis_column\n        ,  diagnosis_code_25  as diagnosis_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n)\n\nselect\n    claim_id\n    , data_source\n    , diagnosis_code_type\n    , diagnosis_column\n    , coalesce(icd_9.icd_9_cm,icd_10.icd_10_cm) as normalized_diagnosis_code\n    , count(*) as diagnosis_code_occurrence_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom pivot_diagnosis piv\nleft join \"synthea\".\"terminology\".\"icd_10_cm\" icd_10\n    on replace(piv.diagnosis_code,'.','') = icd_10.icd_10_cm\n    and piv.diagnosis_code_type = 'icd-10-cm'\nleft join \"synthea\".\"terminology\".\"icd_9_cm\" icd_9\n    on replace(piv.diagnosis_code,'.','') = icd_9.icd_9_cm\n    and piv.diagnosis_code_type = 'icd-9-cm'\nwhere claim_type <> 'undetermined'\ngroup by \n    claim_id\n    , data_source\n    , diagnosis_code_type\n    , diagnosis_column\n    , coalesce(icd_9.icd_9_cm,icd_10.icd_10_cm)", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_diagnosis_code_normalize\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.887767Z", "completed_at": "2024-02-17T06:17:05.900495Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.910895Z", "completed_at": "2024-02-17T06:17:05.974407Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.09616231918334961, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_medical_claim_date_normalize (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_medical_claim_date_normalize.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_medical_claim_date_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n) select distinct\n  med.claim_id\n  , med.claim_line_number\n  , med.claim_type\n  , med.data_source\n  , cal_claim_start.full_date as normalized_claim_start_date\n  , cal_claim_end.full_date as normalized_claim_end_date\n  , cal_claim_line_start.full_date as normalized_claim_line_start_date\n  , cal_claim_line_end.full_date as normalized_claim_line_end_date\n  , cal_admission.full_date as normalized_admission_date\n  , cal_discharge.full_date as normalized_discharge_date\n  , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim med\nleft join \"synthea\".\"terminology\".\"calendar\" cal_claim_start\n    on med.claim_start_date = cal_claim_start.full_date\nleft join \"synthea\".\"terminology\".\"calendar\" cal_claim_end\n    on med.claim_end_Date = cal_claim_end.full_date\nleft join \"synthea\".\"terminology\".\"calendar\" cal_claim_line_start\n    on med.claim_line_start_date = cal_claim_line_start.full_date\nleft join \"synthea\".\"terminology\".\"calendar\" cal_claim_line_end\n    on med.claim_line_end_date = cal_claim_line_end.full_date\nleft join \"synthea\".\"terminology\".\"calendar\" cal_admission\n    on med.admission_date = cal_admission.full_date\nleft join \"synthea\".\"terminology\".\"calendar\" cal_discharge\n    on med.discharge_date = cal_discharge.full_date", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_medical_claim_date_normalize\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.904301Z", "completed_at": "2024-02-17T06:17:05.921173Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.933377Z", "completed_at": "2024-02-17T06:17:05.979601Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.10018444061279297, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_medical_npi_normalize (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_medical_npi_normalize.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_medical_npi_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n) select distinct\n  med.claim_id\n  , med.claim_line_number\n  , med.claim_type\n  , med.data_source\n  , rend_prov.npi as normalized_rendering_npi\n  , bill_prov.npi as normalized_billing_npi\n  , fac_prov.npi as normalized_facility_npi\n  , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim med\nleft join \"synthea\".\"terminology\".\"provider\" rend_prov\n    on med.rendering_npi = rend_prov.npi\n    and rend_prov.entity_type_description = 'Individual'\nleft join \"synthea\".\"terminology\".\"provider\" bill_prov\n    on med.billing_npi = bill_prov.npi\nleft join \"synthea\".\"terminology\".\"provider\" fac_prov\n    on med.facility_npi = fac_prov.npi\n    and fac_prov.entity_type_description = 'Organization'\n    and med.claim_type = 'institutional'", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_medical_npi_normalize\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.915972Z", "completed_at": "2024-02-17T06:17:05.932571Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.956748Z", "completed_at": "2024-02-17T06:17:05.980904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09821772575378418, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_ms_drg_voting (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_ms_drg_voting.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_ms_drg_voting", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), normalize as(\n    select \n        med.claim_id\n        , med.data_source\n        , ms.ms_drg_code\n    from __dbt__cte__normalized_input__stg_medical_claim med\n    inner join \"synthea\".\"terminology\".\"ms_drg\" ms\n        on med.ms_drg_code = ms.ms_drg_code\n    where claim_type = 'institutional'\n)\n, distinct_counts as(\n    select \n        claim_id\n        , data_source\n        , ms_drg_code\n        , count(*) as ms_drg_occurrence_count\n    from normalize\n    where ms_drg_code is not null\n    group by \n        claim_id\n        , data_source\n        , ms_drg_code\n)\n\n, occurence_comparison as(\n    select\n        claim_id\n        , data_source\n        , 'ms_drg_code' as column_name\n        , ms_drg_code as normalized_code\n        , ms_drg_occurrence_count as occurrence_count\n        , coalesce(lead(ms_drg_occurrence_count) \n            over (partition by claim_id, data_source order by ms_drg_occurrence_count desc),0) as next_occurrence_count\n        , row_number() over (partition by claim_id, data_source order by ms_drg_occurrence_count desc) as occurrence_row_count\n    from distinct_counts dist\n)\n\nselect\n    claim_id\n    , data_source\n    , column_name\n    , normalized_code\n    , occurrence_count\n    , next_occurrence_count\n    , occurrence_row_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom occurence_comparison", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_ms_drg_voting\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:05.925830Z", "completed_at": "2024-02-17T06:17:05.933015Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:05.961242Z", "completed_at": "2024-02-17T06:17:05.981365Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.09782910346984863, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_place_of_service_normalize (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_place_of_service_normalize.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_place_of_service_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n) select\n    claim_id\n    , claim_line_number\n    , data_source\n    , pos.place_of_service_code as normalized_code\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim med\nleft join \"synthea\".\"terminology\".\"place_of_service\" pos\n    on lpad(med.place_of_service_code, 2, '0') = pos.place_of_service_code\nwhere claim_type = 'professional'", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_place_of_service_normalize\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:06.002708Z", "completed_at": "2024-02-17T06:17:06.036426Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:06.041605Z", "completed_at": "2024-02-17T06:17:06.159593Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.17393255233764648, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_present_on_admit_normalize (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_present_on_admit_normalize.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_present_on_admit_normalize", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), pivot_poa as(\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_1'  as diagnosis_column\n        ,  diagnosis_poa_1  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_2'  as diagnosis_column\n        ,  diagnosis_poa_2  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_3'  as diagnosis_column\n        ,  diagnosis_poa_3  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_4'  as diagnosis_column\n        ,  diagnosis_poa_4  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_5'  as diagnosis_column\n        ,  diagnosis_poa_5  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_6'  as diagnosis_column\n        ,  diagnosis_poa_6  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_7'  as diagnosis_column\n        ,  diagnosis_poa_7  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_8'  as diagnosis_column\n        ,  diagnosis_poa_8  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_9'  as diagnosis_column\n        ,  diagnosis_poa_9  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_10'  as diagnosis_column\n        ,  diagnosis_poa_10  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_11'  as diagnosis_column\n        ,  diagnosis_poa_11  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_12'  as diagnosis_column\n        ,  diagnosis_poa_12  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_13'  as diagnosis_column\n        ,  diagnosis_poa_13  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_14'  as diagnosis_column\n        ,  diagnosis_poa_14  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_15'  as diagnosis_column\n        ,  diagnosis_poa_15  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_16'  as diagnosis_column\n        ,  diagnosis_poa_16  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_17'  as diagnosis_column\n        ,  diagnosis_poa_17  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_18'  as diagnosis_column\n        ,  diagnosis_poa_18  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_19'  as diagnosis_column\n        ,  diagnosis_poa_19  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_20'  as diagnosis_column\n        ,  diagnosis_poa_20  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_21'  as diagnosis_column\n        ,  diagnosis_poa_21  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_22'  as diagnosis_column\n        ,  diagnosis_poa_22  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_23'  as diagnosis_column\n        ,  diagnosis_poa_24  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_24'  as diagnosis_column\n        ,  diagnosis_poa_24  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'diagnosis_poa_25'  as diagnosis_column\n        ,  diagnosis_poa_25  as present_on_admit_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n)\n\nselect\n    claim_id\n    , data_source\n    , diagnosis_column\n    , poa.present_on_admit_code as normalized_present_on_admit_code\n    , count(*) as present_on_admit_occurrence_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom pivot_poa piv\nleft join \"synthea\".\"terminology\".\"present_on_admission\" poa\n    on replace(piv.present_on_admit_code,'.','') = poa.present_on_admit_code\nwhere claim_type = 'institutional'\ngroup by \n    claim_id\n    , data_source\n    , diagnosis_column\n    , poa.present_on_admit_code", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_present_on_admit_normalize\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:06.049757Z", "completed_at": "2024-02-17T06:17:06.119005Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:06.143104Z", "completed_at": "2024-02-17T06:17:06.169037Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.16752886772155762, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_procedure_code_normalize (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_procedure_code_normalize.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_code_normalize", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), pivot_procedure as(\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_1'  as procedure_column\n        ,  procedure_code_1  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_2'  as procedure_column\n        ,  procedure_code_2  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_3'  as procedure_column\n        ,  procedure_code_3  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_4'  as procedure_column\n        ,  procedure_code_4  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_5'  as procedure_column\n        ,  procedure_code_5  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_6'  as procedure_column\n        ,  procedure_code_6  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_7'  as procedure_column\n        ,  procedure_code_7  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_8'  as procedure_column\n        ,  procedure_code_8  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_9'  as procedure_column\n        ,  procedure_code_9  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_10'  as procedure_column\n        ,  procedure_code_10  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_11'  as procedure_column\n        ,  procedure_code_11  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_12'  as procedure_column\n        ,  procedure_code_12  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_13'  as procedure_column\n        ,  procedure_code_13  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_14'  as procedure_column\n        ,  procedure_code_14  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_15'  as procedure_column\n        ,  procedure_code_15  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_16'  as procedure_column\n        ,  procedure_code_16  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_17'  as procedure_column\n        ,  procedure_code_17  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_18'  as procedure_column\n        ,  procedure_code_18  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_19'  as procedure_column\n        ,  procedure_code_19  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_20'  as procedure_column\n        ,  procedure_code_20  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_21'  as procedure_column\n        ,  procedure_code_21  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_22'  as procedure_column\n        ,  procedure_code_22  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_23'  as procedure_column\n        ,  procedure_code_24  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_24'  as procedure_column\n        ,  procedure_code_24  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , procedure_code_type\n        , 'procedure_code_25'  as procedure_column\n        ,  procedure_code_25  as procedure_code\n    from __dbt__cte__normalized_input__stg_medical_claim\n)\n\nselect\n    claim_id\n    , data_source\n    , procedure_code_type\n    , procedure_column\n    , coalesce(icd_9.icd_9_pcs,icd_10.icd_10_pcs) as normalized_procedure_code\n    , count(*) as procedure_code_occurrence_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom pivot_procedure piv\nleft join \"synthea\".\"terminology\".\"icd_10_pcs\" icd_10\n    on replace(piv.procedure_code,'.','') = icd_10.icd_10_pcs\n    and piv.procedure_code_type = 'icd-10-pcs'\nleft join \"synthea\".\"terminology\".\"icd_9_pcs\" icd_9\n    on replace(piv.procedure_code,'.','') = icd_9.icd_9_pcs\n    and piv.procedure_code_type = 'icd-9-pcs'\nwhere claim_type = 'institutional'\ngroup by \n    claim_id\n    , data_source\n    , procedure_code_type\n    , procedure_column\n    , coalesce(icd_9.icd_9_pcs,icd_10.icd_10_pcs)", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_procedure_code_normalize\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:06.066235Z", "completed_at": "2024-02-17T06:17:06.118127Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:06.139561Z", "completed_at": "2024-02-17T06:17:06.170470Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.16711974143981934, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_procedure_date_normalize (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_procedure_date_normalize.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_date_normalize", "compiled": true, "compiled_code": "\n\n\nwith  __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n), pivot_procedure as(\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_1'  as procedure_column\n        ,  procedure_date_1  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_2'  as procedure_column\n        ,  procedure_date_2  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_3'  as procedure_column\n        ,  procedure_date_3  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_4'  as procedure_column\n        ,  procedure_date_4  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_5'  as procedure_column\n        ,  procedure_date_5  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_6'  as procedure_column\n        ,  procedure_date_6  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_7'  as procedure_column\n        ,  procedure_date_7  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_8'  as procedure_column\n        ,  procedure_date_8  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_9'  as procedure_column\n        ,  procedure_date_9  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_10'  as procedure_column\n        ,  procedure_date_10  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_11'  as procedure_column\n        ,  procedure_date_11  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_12'  as procedure_column\n        ,  procedure_date_12  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_13'  as procedure_column\n        ,  procedure_date_13  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_14'  as procedure_column\n        ,  procedure_date_14  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_15'  as procedure_column\n        ,  procedure_date_15  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_16'  as procedure_column\n        ,  procedure_date_16  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_17'  as procedure_column\n        ,  procedure_date_17  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_18'  as procedure_column\n        ,  procedure_date_18  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_19'  as procedure_column\n        ,  procedure_date_19  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_20'  as procedure_column\n        ,  procedure_date_20  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_21'  as procedure_column\n        ,  procedure_date_21  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_22'  as procedure_column\n        ,  procedure_date_22  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_23'  as procedure_column\n        ,  procedure_date_24  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_24'  as procedure_column\n        ,  procedure_date_24  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n\n    union all\n\n    select\n        claim_id\n        , claim_type\n        , data_source\n        , 'procedure_date_25'  as procedure_column\n        ,  procedure_date_25  as procedure_date\n    from __dbt__cte__normalized_input__stg_medical_claim\n)\n\nselect\n    claim_id\n    , data_source\n    , procedure_column\n    , cal.full_date as procedure_date\n    , count(*) as procedure_date_occurrence_count\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom pivot_procedure piv\nleft join \"synthea\".\"terminology\".\"calendar\" cal\n    on piv.procedure_date = cal.full_date\nwhere claim_type = 'institutional'\ngroup by \n    claim_id\n    , data_source\n    , procedure_column\n    , cal.full_date", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_procedure_date_normalize\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:06.111904Z", "completed_at": "2024-02-17T06:17:06.138224Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:06.148200Z", "completed_at": "2024-02-17T06:17:06.171078Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.16674160957336426, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_revenue_center_normalize (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_revenue_center_normalize.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_revenue_center_normalize", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n) select\n    claim_id\n    , claim_line_number\n    , data_source\n    , rev.revenue_center_code as normalized_code\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim med\nleft join \"synthea\".\"terminology\".\"revenue_center\" rev\n    on lpad(med.revenue_center_code, 4, '0') = rev.revenue_center_code\nwhere claim_type = 'institutional'", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_revenue_center_normalize\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__observation", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"observation\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_admit_type_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_admit_type_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_admit_source_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_admit_source_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_apr_drg_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_apr_drg_final\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:06.179338Z", "completed_at": "2024-02-17T06:17:06.211660Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:06.215629Z", "completed_at": "2024-02-17T06:17:06.329090Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1688239574432373, "adapter_response": {}, "message": "Runtime Error in model normalized_input__int_undetermined_claim_type (models/claims_preprocessing/normalized_input/intermediate/normalized_input__int_undetermined_claim_type.sql)\n  Binder Error: Referenced column \"ms_drg_code\" not found in FROM clause!\n  Candidate bindings: \"medical_claim.paid_date\"", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_undetermined_claim_type", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_medical_claim as (\n\n\nselect\n      claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\nfrom \"synthea\".\"main\".\"medical_claim\"\n) select\n    claim_id\n    , claim_line_number\n    , claim_type\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , claim_start_date\n    , claim_end_date\n    , claim_line_start_date\n    , claim_line_end_date\n    , admission_date\n    , discharge_date\n    , admit_source_code\n    , admit_type_code\n    , discharge_disposition_code\n    , place_of_service_code\n    , bill_type_code\n    , ms_drg_code\n    , apr_drg_code\n    , revenue_center_code\n    , service_unit_quantity\n    , hcpcs_code\n    , hcpcs_modifier_1\n    , hcpcs_modifier_2\n    , hcpcs_modifier_3\n    , hcpcs_modifier_4\n    , hcpcs_modifier_5\n    , rendering_npi\n    , billing_npi\n    , facility_npi\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , charge_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , total_cost_amount\n    , diagnosis_code_type\n    , diagnosis_code_1\n    , diagnosis_code_2\n    , diagnosis_code_3\n    , diagnosis_code_4\n    , diagnosis_code_5\n    , diagnosis_code_6\n    , diagnosis_code_7\n    , diagnosis_code_8\n    , diagnosis_code_9\n    , diagnosis_code_10\n    , diagnosis_code_11\n    , diagnosis_code_12\n    , diagnosis_code_13\n    , diagnosis_code_14\n    , diagnosis_code_15\n    , diagnosis_code_16\n    , diagnosis_code_17\n    , diagnosis_code_18\n    , diagnosis_code_19\n    , diagnosis_code_20\n    , diagnosis_code_21\n    , diagnosis_code_22\n    , diagnosis_code_23\n    , diagnosis_code_24\n    , diagnosis_code_25\n    , diagnosis_poa_1\n    , diagnosis_poa_2\n    , diagnosis_poa_3\n    , diagnosis_poa_4\n    , diagnosis_poa_5\n    , diagnosis_poa_6\n    , diagnosis_poa_7\n    , diagnosis_poa_8\n    , diagnosis_poa_9\n    , diagnosis_poa_10\n    , diagnosis_poa_11\n    , diagnosis_poa_12\n    , diagnosis_poa_13\n    , diagnosis_poa_14\n    , diagnosis_poa_15\n    , diagnosis_poa_16\n    , diagnosis_poa_17\n    , diagnosis_poa_18\n    , diagnosis_poa_19\n    , diagnosis_poa_20\n    , diagnosis_poa_21\n    , diagnosis_poa_22\n    , diagnosis_poa_23\n    , diagnosis_poa_24\n    , diagnosis_poa_25\n    , procedure_code_type\n    , procedure_code_1\n    , procedure_code_2\n    , procedure_code_3\n    , procedure_code_4\n    , procedure_code_5\n    , procedure_code_6\n    , procedure_code_7\n    , procedure_code_8\n    , procedure_code_9\n    , procedure_code_10\n    , procedure_code_11\n    , procedure_code_12\n    , procedure_code_13\n    , procedure_code_14\n    , procedure_code_15\n    , procedure_code_16\n    , procedure_code_17\n    , procedure_code_18\n    , procedure_code_19\n    , procedure_code_20\n    , procedure_code_21\n    , procedure_code_22\n    , procedure_code_23\n    , procedure_code_24\n    , procedure_code_25\n    , procedure_date_1\n    , procedure_date_2\n    , procedure_date_3\n    , procedure_date_4\n    , procedure_date_5\n    , procedure_date_6\n    , procedure_date_7\n    , procedure_date_8\n    , procedure_date_9\n    , procedure_date_10\n    , procedure_date_11\n    , procedure_date_12\n    , procedure_date_13\n    , procedure_date_14\n    , procedure_date_15\n    , procedure_date_16\n    , procedure_date_17\n    , procedure_date_18\n    , procedure_date_19\n    , procedure_date_20\n    , procedure_date_21\n    , procedure_date_22\n    , procedure_date_23\n    , procedure_date_24\n    , procedure_date_25\n    , data_source\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_medical_claim\nwhere claim_type in ('undetermined')", "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_undetermined_claim_type\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_bill_type_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_bill_type_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_discharge_disposition_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_discharge_disposition_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_diagnosis_code_voting", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_diagnosis_code_voting\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_medical_date_aggregation", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_medical_date_aggregation\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_ms_drg_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_ms_drg_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_present_on_admit_voting", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_present_on_admit_voting\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_code_voting", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_procedure_code_voting\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_date_voting", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_procedure_date_voting\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_diagnosis_code_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_diagnosis_code_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_present_on_admit_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_present_on_admit_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_code_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_procedure_code_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__int_procedure_date_final", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_normalized_input_procedure_date_final\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__observation_patient_id.31e33f2d7e", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.normalized_input__medical_claim", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"normalized_input_medical_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_normalized_input__medical_claim__claim_id_claim_line_number_.7102b4fe4f", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_claim_type_mapping_failures", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_claim_type_mapping_failures\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_claim_type_unmapped", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_claim_type_unmapped\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_institutional_header_fail_details", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_institutional_header_fail_details\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_dates", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_dates\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_dates_inst", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_dates_inst\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_denominators", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_denominators\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_duplicates", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_duplicates\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_inst_missing_values", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_inst_missing_values\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_invalid_npi", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_invalid_npi\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_invalid_values", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_invalid_values\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_line_numbers", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_line_numbers\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_plausibility", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_plausibility\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_medical_claim_prof_missing_values", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_medical_claim_prof_missing_values\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_professional_header_fail_details", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_professional_header_fail_details\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_test_detail_stage_medical_claim", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_test_detail_stage_medical_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__acute_inpatient_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__acute_inpatient_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__ambulance_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_ambulance_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dialysis_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_dialysis_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dialysis_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_dialysis_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dme_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_dme_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dq_input_layer_tests", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_dq_input_layer_tests\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__duplicate_bill_types", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_duplicate_bill_types\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__emergency_department_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__home_health_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_home_health_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__hospice_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_hospice_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__hospice_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_hospice_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_psychiatric_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_inpatient_psychiatric_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__inpatient_rehab_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_inpatient_rehab_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__lab_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_lab_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__lab_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_lab_professional\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:06.349632Z", "completed_at": "2024-02-17T06:17:06.371595Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:06.377509Z", "completed_at": "2024-02-17T06:17:06.955534Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6119000911712646, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__eligibility", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_eligibility as (\n\n\n\nselect\n      patient_id\n    , patient_id||data_source||payer||plan||enrollment_start_date||enrollment_end_date as patient_id_key\n    , member_id\n    , gender\n    , race\n    , birth_date\n    , death_date\n    , death_flag\n    , enrollment_start_date\n    , enrollment_end_date\n    , payer\n    , payer_type\n    , plan\n    , original_reason_entitlement_code\n    , dual_status_code\n    , medicare_status_code\n    , first_name\n    , last_name\n    , address\n    , city\n    , state\n    , zip_code\n    , phone\n    , data_source\nfrom \"synthea\".\"main\".\"eligibility\"\n) select\n    cast(elig.patient_id as TEXT ) as patient_id\n    , cast(elig.member_id as TEXT ) as member_id\n    , cast(elig.gender as TEXT ) as gender\n    , cast(elig.race as TEXT ) as race\n    , cast(date_norm.normalized_birth_date as date ) as birth_date\n    , cast(date_norm.normalized_death_date as date ) as death_date\n    , cast(elig.death_flag as int ) as death_flag\n    , cast(date_norm.normalized_enrollment_start_date as date ) as enrollment_start_date\n    , cast(date_norm.normalized_enrollment_end_date as date ) as enrollment_end_date\n    , cast(elig.payer as TEXT ) as payer\n    , cast(elig.payer_type as TEXT ) as payer_type\n    , cast(elig.plan as TEXT ) as plan\n    , cast(elig.original_reason_entitlement_code as TEXT ) as original_reason_entitlement_code\n    , cast(elig.dual_status_code as TEXT ) as dual_status_code\n    , cast(elig.medicare_status_code as TEXT ) as medicare_status_code\n    , cast(elig.first_name as TEXT ) as first_name\n    , cast(elig.last_name as TEXT ) as last_name\n    , cast(elig.address as TEXT ) as address\n    , cast(elig.city as TEXT ) as city\n    , cast(elig.state as TEXT ) as state\n    , cast(elig.zip_code as TEXT ) as zip_code\n    , cast(elig.phone as TEXT ) as phone\n    , cast(elig.data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00'  as TEXT ) as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_eligibility elig\nleft join \"synthea\".\"claims_preprocessing\".\"_int_normalized_input_eligibility_dates_normalize\" date_norm\n    on elig.patient_id_key = date_norm.patient_id_key", "relation_name": "\"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_hospital_or_clinic_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_outpatient_hospital_or_clinic_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__office_visit_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_office_visit_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_psychiatric_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_outpatient_psychiatric_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_psychiatric_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_outpatient_psychiatric_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__skilled_nursing_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_skilled_nursing_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_rehab_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_outpatient_rehab_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__urgent_care_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_urgent_care_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__emergency_department_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__ambulatory_surgery_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_ambulatory_surgery_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__home_health_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_home_health_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__skilled_nursing_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_skilled_nursing_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dq_input_layer_results", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_dq_input_layer_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:07.008906Z", "completed_at": "2024-02-17T06:17:07.086067Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:07.099624Z", "completed_at": "2024-02-17T06:17:07.203161Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.21071791648864746, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_eligibility_denominators", "compiled": true, "compiled_code": "\n/*\n    Denominator logic for invalid value tests is dependent on whether that\n    specific field is populated or not. We created a macro to automatically\n    generate the CTE. All invalid value tests must have a\n    test_category = 'invalid_values' in the catalog seed.\n*/\nwith all_denominator as (\n\n    select\n        cast('all' as TEXT ) as test_denominator_name\n        , count(distinct patient_id) as denominator\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n\n)\n\n, invalid_value_denominators as (\n\n    select\n          cat.test_name\n        , count(distinct rel.patient_id) as denominator\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\" as rel\n         left join \"synthea\".\"data_quality\".\"_value_set_test_catalog\" as cat\n           on cat.test_category = 'invalid_values'\n           and cat.source_table = 'normalized_input__eligibility'\n           and cat.test_field = 'dual_status_code'\n    where rel.dual_status_code is not null\n    group by cat.test_name\n    union all\n    select\n          cat.test_name\n        , count(distinct rel.patient_id) as denominator\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\" as rel\n         left join \"synthea\".\"data_quality\".\"_value_set_test_catalog\" as cat\n           on cat.test_category = 'invalid_values'\n           and cat.source_table = 'normalized_input__eligibility'\n           and cat.test_field = 'gender'\n    where rel.gender is not null\n    group by cat.test_name\n    union all\n    select\n          cat.test_name\n        , count(distinct rel.patient_id) as denominator\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\" as rel\n         left join \"synthea\".\"data_quality\".\"_value_set_test_catalog\" as cat\n           on cat.test_category = 'invalid_values'\n           and cat.source_table = 'normalized_input__eligibility'\n           and cat.test_field = 'medicare_status_code'\n    where rel.medicare_status_code is not null\n    group by cat.test_name\n    union all\n    select\n          cat.test_name\n        , count(distinct rel.patient_id) as denominator\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\" as rel\n         left join \"synthea\".\"data_quality\".\"_value_set_test_catalog\" as cat\n           on cat.test_category = 'invalid_values'\n           and cat.source_table = 'normalized_input__eligibility'\n           and cat.test_field = 'original_reason_entitlement_code'\n    where rel.original_reason_entitlement_code is not null\n    group by cat.test_name\n    union all\n    select\n          cat.test_name\n        , count(distinct rel.patient_id) as denominator\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\" as rel\n         left join \"synthea\".\"data_quality\".\"_value_set_test_catalog\" as cat\n           on cat.test_category = 'invalid_values'\n           and cat.source_table = 'normalized_input__eligibility'\n           and cat.test_field = 'payer_type'\n    where rel.payer_type is not null\n    group by cat.test_name\n    union all\n    select\n          cat.test_name\n        , count(distinct rel.patient_id) as denominator\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\" as rel\n         left join \"synthea\".\"data_quality\".\"_value_set_test_catalog\" as cat\n           on cat.test_category = 'invalid_values'\n           and cat.source_table = 'normalized_input__eligibility'\n           and cat.test_field = 'race'\n    where rel.race is not null\n    group by cat.test_name\n    \n\n)\n\nselect * from all_denominator\nunion all\nselect * from invalid_value_denominators", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_denominators\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:07.028171Z", "completed_at": "2024-02-17T06:17:07.085322Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:07.094824Z", "completed_at": "2024-02-17T06:17:07.221268Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.21248245239257812, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_eligibility_duplicates", "compiled": true, "compiled_code": "\n\nwith eligibility as (\n\n    select\n          patient_id\n        , member_id\n        , payer\n        , plan\n        , enrollment_start_date\n        , enrollment_end_date\n        , data_source\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n\n)\n\n, test_catalog as (\n\n    select\n          source_table\n        , test_category\n        , test_name\n        , pipeline_test\n    from \"synthea\".\"data_quality\".\"_value_set_test_catalog\"\n\n)\n\nselect distinct\n      test_catalog.source_table\n    , 'all' as claim_type\n    , 'patient_id' as grain\n    , patient_id\n    , data_source\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom eligibility\n     left join test_catalog\n       on test_catalog.test_name = 'duplicate eligibility'\n       and test_catalog.source_table = 'normalized_input__eligibility'\ngroup by\n      eligibility.patient_id\n    , eligibility.member_id\n    , eligibility.payer\n    , eligibility.plan\n    , eligibility.enrollment_start_date\n    , eligibility.enrollment_end_date\n    , eligibility.data_source\n    , test_catalog.source_table\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test\nhaving count(*) > 1", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_duplicates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:07.316291Z", "completed_at": "2024-02-17T06:17:07.333821Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:07.335512Z", "completed_at": "2024-02-17T06:17:07.395172Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.09580516815185547, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_eligibility_missing_values", "compiled": true, "compiled_code": "\n\nwith eligibility_missing as (\n\n \n        select\n              patient_id\n            , data_source\n            , 'patient_id' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where patient_id is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'member_id' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where member_id is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'gender' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where gender is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'race' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where race is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'birth_date' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where birth_date is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'death_date' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where death_date is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'death_flag' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where death_flag is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'enrollment_start_date' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where enrollment_start_date is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'enrollment_end_date' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where enrollment_end_date is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'payer' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where payer is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'payer_type' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where payer_type is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'dual_status_code' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where dual_status_code is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'medicare_status_code' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where medicare_status_code is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'first_name' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where first_name is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'last_name' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where last_name is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'address' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where address is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'city' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where city is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'state' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where state is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'zip_code' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where zip_code is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'phone' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where phone is null\n        union all\n        select\n              patient_id\n            , data_source\n            , 'data_source' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n        where data_source is null\n        \n\n)\n\n, test_catalog as (\n\n    select\n          source_table\n        , test_category\n        , test_name\n        , pipeline_test\n    from \"synthea\".\"data_quality\".\"_value_set_test_catalog\"\n\n)\n\nselect\n      test_catalog.source_table\n    , 'all' as claim_type\n    , 'patient_id' as grain\n    , eligibility_missing.patient_id\n    , eligibility_missing.data_source\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom eligibility_missing\n     left join test_catalog\n       on test_catalog.test_name = eligibility_missing.column_checked||' missing'\n       and test_catalog.source_table = 'normalized_input__eligibility'\ngroup by\n      eligibility_missing.patient_id\n    , eligibility_missing.data_source\n    , test_catalog.source_table\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_missing_values\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:07.286053Z", "completed_at": "2024-02-17T06:17:07.322016Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:07.329671Z", "completed_at": "2024-02-17T06:17:07.397256Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.14974689483642578, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_eligibility_invalid_values", "compiled": true, "compiled_code": "\n\nwith eligiblity as (\n\n    select *\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n\n)\n\n, test_catalog as (\n\n    select\n          source_table\n        , test_category\n        , test_name\n        , pipeline_test\n    from \"synthea\".\"data_quality\".\"_value_set_test_catalog\"\n\n)\n\n, valid_gender as (\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.gender\n        , count(eligiblity.gender) as filled_row_count\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join \"synthea\".\"terminology\".\"gender\" gender\n           on eligiblity.gender = gender.gender\n         left join test_catalog\n           on test_catalog.test_name = 'gender invalid'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    where gender.gender is null\n    and eligiblity.gender is not null\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.gender\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n\n)\n\n, valid_race as (\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.race\n        , count(eligiblity.race) as filled_row_count\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join \"synthea\".\"terminology\".\"race\" race\n           on eligiblity.race = race.description\n         left join test_catalog\n           on test_catalog.test_name = 'race invalid'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    where race.description is null\n    and eligiblity.race is not null\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.race\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n\n)\n\n, valid_payer_type as (\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.payer_type\n        , count(eligiblity.payer_type) as filled_row_count\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join \"synthea\".\"terminology\".\"payer_type\" payer\n           on eligiblity.payer_type = payer.payer_type\n         left join test_catalog\n           on test_catalog.test_name = 'payer_type invalid'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    where payer.payer_type is null\n    and eligiblity.payer_type is not null\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.payer_type\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n\n)\n\n, valid_orec as (\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.original_reason_entitlement_code\n        , count(eligiblity.original_reason_entitlement_code) as filled_row_count\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join \"synthea\".\"terminology\".\"medicare_orec\" orec\n           on eligiblity.original_reason_entitlement_code = orec.original_reason_entitlement_code\n         left join test_catalog\n           on test_catalog.test_name = 'original_reason_entitlement_code invalid'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    where orec.original_reason_entitlement_code is null\n    and eligiblity.original_reason_entitlement_code is not null\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.original_reason_entitlement_code\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n\n)\n\n, valid_dual_status_code as (\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.dual_status_code\n        , count(eligiblity.dual_status_code) as filled_row_count\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join \"synthea\".\"terminology\".\"medicare_dual_eligibility\" dual\n           on eligiblity.dual_status_code = dual.dual_status_code\n         left join test_catalog\n           on test_catalog.test_name = 'dual_status_code invalid'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    where dual.dual_status_code is null\n    and eligiblity.dual_status_code is not null\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.dual_status_code\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n\n)\n\n, valid_medicare_status_code as (\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.medicare_status_code\n        , count(eligiblity.medicare_status_code) as filled_row_count\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join \"synthea\".\"terminology\".\"medicare_status\" status\n           on eligiblity.medicare_status_code = status.medicare_status_code\n         left join test_catalog\n           on test_catalog.test_name = 'medicare_status_code invalid'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    where status.medicare_status_code is null\n    and eligiblity.medicare_status_code is not null\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , eligiblity.medicare_status_code\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n\n)\n\nselect * from valid_gender\nunion all\nselect * from valid_race\nunion all\nselect * from valid_payer_type\nunion all\nselect * from valid_orec\nunion all\nselect * from valid_dual_status_code\nunion all\nselect * from valid_medicare_status_code", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_invalid_values\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__urgent_care_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_urgent_care_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__combined_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_combined_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__outpatient_hospital_or_clinic_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_outpatient_hospital_or_clinic_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dq_multiple_service_categories_professional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_dq_multiple_service_categories_professional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__combined_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_combined_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__dq_multiple_service_categories_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_dq_multiple_service_categories_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.service_category__service_category_grouper", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"service_category_grouper\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__institutional_claims", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_institutional_claims\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__int_institutional_claims", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_institutional_claims\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__data_quality_summary", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_data_quality_summary\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__institutional_encounter_id", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_institutional_encounter_id\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:07.409900Z", "completed_at": "2024-02-17T06:17:07.424283Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:07.426231Z", "completed_at": "2024-02-17T06:17:07.535042Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13258147239685059, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_eligibility_plausibility", "compiled": true, "compiled_code": "\n\nwith eligiblity as (\n\n    select *\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_eligibility\"\n\n)\n\n, test_catalog as (\n\n    select\n          source_table\n        , test_category\n        , test_name\n        , pipeline_test\n    from \"synthea\".\"data_quality\".\"_value_set_test_catalog\"\n\n)\n\n, multiple_genders_test as (\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join test_catalog\n           on test_catalog.test_name = 'multiple genders'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n    having count(distinct eligiblity.gender) > 1\n\n)\n\n, multiple_races_test as(\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join test_catalog\n           on test_catalog.test_name = 'multiple races'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n    having count(distinct eligiblity.race) > 1\n\n)\n\n, multiple_birth_dates_test as(\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join test_catalog\n           on test_catalog.test_name = 'multiple birth dates'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n    having count(distinct eligiblity.birth_date) > 1\n\n)\n\n, multiple_death_dates_test as(\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join test_catalog\n           on test_catalog.test_name = 'multiple death dates'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n    having count(distinct eligiblity.death_date) > 1\n\n)\n\n, birth_date_after_death_date as(\n\n    select\n          test_catalog.test_name\n        , test_catalog.pipeline_test\n        , test_catalog.source_table\n        , 'all' as claim_type\n        , test_catalog.test_category\n        , 'patient_id' as grain\n        , eligiblity.patient_id\n        , eligiblity.data_source\n        , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\n    from eligiblity\n         left join test_catalog\n           on test_catalog.test_name = 'birth date after death date'\n           and test_catalog.source_table = 'normalized_input__eligibility'\n    where eligiblity.birth_date > eligiblity.death_date\n    group by\n          eligiblity.patient_id\n        , eligiblity.data_source\n        , test_catalog.source_table\n        , test_catalog.test_category\n        , test_catalog.test_name\n        , test_catalog.pipeline_test\n\n)\n\nselect * from multiple_genders_test\nunion all\nselect * from multiple_races_test\nunion all\nselect * from multiple_birth_dates_test\nunion all\nselect * from multiple_death_dates_test\nunion all\nselect * from birth_date_after_death_date", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_plausibility\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__int_institutional_encounter_id", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_institutional_encounter_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__encounter_start_and_end_dates", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_encounter_start_and_end_dates\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__int_encounter_start_and_end_dates", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_encounter_start_and_end_dates\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__professional_encounter_id", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_professional_encounter_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__int_professional_encounter_id", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_professional_encounter_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__encounter_id", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_encounter_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__int_encounter_id", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_encounter_id\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__claims_with_encounter_data", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_claims_with_encounter_data\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__first_claim_values", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_first_claim_values\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__last_claim_values", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_acute_inpatient_last_claim_values\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__int_first_claim_values", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_first_claim_values\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__int_last_claim_values", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_emergency_department_last_claim_values\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__encounter_data_for_medical_claims", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"_int_encounter_data_for_medical_claims\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.acute_inpatient__summary", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"acute_inpatient_summary\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.emergency_department__summary", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"claims_preprocessing\".\"emergency_department_summary\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:07.558523Z", "completed_at": "2024-02-17T06:17:07.567263Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:07.590755Z", "completed_at": "2024-02-17T06:17:07.674881Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12208986282348633, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_test_detail_stage_eligibility", "compiled": true, "compiled_code": "\n\n\nselect distinct\n    source_table\n    , claim_type\n    , grain\n    , patient_id as foreign_key\n    , data_source\n    , test_category\n    , test_name\n    , pipeline_test\nfrom \"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_duplicates\"\nunion all\nselect distinct\n    source_table\n    , claim_type\n    , grain\n    , patient_id as foreign_key\n    , data_source\n    , test_category\n    , test_name\n    , pipeline_test\nfrom \"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_missing_values\"\nunion all\nselect distinct\n    source_table\n    , claim_type\n    , grain\n    , patient_id as foreign_key\n    , data_source\n    , test_category\n    , test_name\n    , pipeline_test\nfrom \"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_invalid_values\"\nunion all\nselect distinct\n    source_table\n    , claim_type\n    , grain\n    , patient_id as foreign_key\n    , data_source\n    , test_category\n    , test_name\n    , pipeline_test\nfrom \"synthea\".\"data_quality\".\"_int_claims_preprocessing_eligibility_plausibility\"", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_test_detail_stage_eligibility\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:06.250230Z", "completed_at": "2024-02-17T06:17:06.269135Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:06.272200Z", "completed_at": "2024-02-17T06:17:09.063857Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 2.8384735584259033, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.normalized_input__pharmacy_claim", "compiled": true, "compiled_code": "\n\n\nwith __dbt__cte__normalized_input__stg_pharmacy_claim as (\n\n\n\nselect\n      claim_id\n    , claim_line_number\n    , patient_id\n    , member_id\n    , payer\n    , plan\n    , prescribing_provider_npi\n    , dispensing_provider_npi\n    , dispensing_date\n    , ndc_code\n    , quantity\n    , days_supply\n    , refills\n    , paid_date\n    , paid_amount\n    , allowed_amount\n    , coinsurance_amount\n    , copayment_amount\n    , deductible_amount\n    , data_source\nfrom \"synthea\".\"main\".\"pharmacy_claim\"\n) select\n      cast(claim_id as TEXT ) as claim_id\n    , cast(claim_line_number as int ) as claim_line_number\n    , cast(patient_id as TEXT ) as patient_id\n    , cast(member_id as TEXT ) as member_id\n    , cast(payer as TEXT ) as payer\n    , cast(plan as TEXT ) as plan\n    , cast(prescribing_provider_npi as TEXT ) as prescribing_provider_npi\n    , cast(dispensing_provider_npi as TEXT ) as dispensing_provider_npi\n    , cast(dispensing_date as date ) as dispensing_date\n    , cast(ndc_code as TEXT ) as ndc_code\n    , cast(quantity as int ) as quantity\n    , cast(days_supply as int ) as days_supply\n    , cast(refills as int ) as refills\n    , cast(paid_date as date ) as paid_date\n    , cast(paid_amount as numeric(28,6) ) as paid_amount\n    , cast(allowed_amount as numeric(28,6) ) as allowed_amount\n    , cast(coinsurance_amount as numeric(28,6) ) as coinsurance_amount\n    , cast(copayment_amount as numeric(28,6) ) as copayment_amount\n    , cast(deductible_amount as numeric(28,6) ) as deductible_amount\n    , cast(data_source as TEXT ) as data_source\n    , cast('2024-02-17 06:16:59.503923+00:00' as TEXT ) as tuva_last_run\nfrom __dbt__cte__normalized_input__stg_pharmacy_claim", "relation_name": "\"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:09.074046Z", "completed_at": "2024-02-17T06:17:09.089707Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:09.095188Z", "completed_at": "2024-02-17T06:17:09.179105Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11667513847351074, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_pharmacy_claim_duplicates", "compiled": true, "compiled_code": "\n\nwith test_catalog as (\n\n    select\n          source_table\n        , test_category\n        , test_name\n        , pipeline_test\n    from \"synthea\".\"data_quality\".\"_value_set_test_catalog\"\n\n)\n\nselect distinct\n      test_catalog.source_table\n    , 'all' as claim_type\n    , 'claim_id' as grain\n    , claim_id\n    , data_source\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n     left join test_catalog\n       on test_catalog.test_name = 'duplicate pharmacy claims'\n       and test_catalog.source_table = 'normalized_input__pharmacy_claim'\ngroup by\n      claim_id\n    , claim_line_number\n    , data_source\n    , test_catalog.source_table\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test\nhaving count(*) > 1", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_pharmacy_claim_duplicates\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:09.078027Z", "completed_at": "2024-02-17T06:17:09.089097Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:09.091468Z", "completed_at": "2024-02-17T06:17:09.180524Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11658382415771484, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_pharmacy_claim_line_numbers", "compiled": true, "compiled_code": "\n\nwith pharmacy_claim as (\n\n    select\n          claim_id\n        , claim_line_number\n        , data_source\n    from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n\n)\n\n, test_catalog as (\n\n    select\n          source_table\n        , test_category\n        , test_name\n        , pipeline_test\n    from \"synthea\".\"data_quality\".\"_value_set_test_catalog\"\n\n)\n\n, add_row_num as (\n\n    select\n          claim_id\n        , data_source\n        , claim_line_number\n        , row_number() over (\n            partition by claim_id, data_source\n            order by claim_line_number\n          ) as expected_line_number\n    from pharmacy_claim\n\n)\n\n, line_num_check as (\n\n    select\n          add_row_num.claim_id\n        , add_row_num.data_source\n        , add_row_num.claim_line_number\n        , add_row_num.expected_line_number\n    from add_row_num\n         left join pharmacy_claim\n           on add_row_num.claim_id = pharmacy_claim.claim_id\n           and add_row_num.data_source = pharmacy_claim.data_source\n           and add_row_num.expected_line_number = pharmacy_claim.claim_line_number\n    where pharmacy_claim.claim_line_number is null\n\n)\n\nselect\n      test_catalog.source_table\n    , 'all' as claim_type\n    , 'claim_id' as grain\n    , line_num_check.claim_id\n    , line_num_check.data_source\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom line_num_check\n     left join test_catalog\n       on test_catalog.test_name = 'claim_line_number non-sequential'\n       and test_catalog.source_table = 'normalized_input__pharmacy_claim'\ngroup by\n      line_num_check.claim_id\n    , line_num_check.data_source\n    , test_catalog.source_table\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_pharmacy_claim_line_numbers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:09.082031Z", "completed_at": "2024-02-17T06:17:09.090564Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:09.098514Z", "completed_at": "2024-02-17T06:17:09.188328Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.12075066566467285, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_pharmacy_claim_missing_values", "compiled": true, "compiled_code": "\n\nwith pharmacy_claim_missing as (\n\n \n        select\n              claim_id\n            , data_source\n            , 'claim_id' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where claim_id is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'claim_line_number' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where claim_line_number is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'patient_id' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where patient_id is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'member_id' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where member_id is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'payer' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where payer is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'plan' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where plan is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'prescribing_provider_npi' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where prescribing_provider_npi is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'dispensing_provider_npi' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where dispensing_provider_npi is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'dispensing_date' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where dispensing_date is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'ndc_code' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where ndc_code is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'quantity' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where quantity is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'days_supply' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where days_supply is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'refills' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where refills is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'paid_date' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where paid_date is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'paid_amount' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where paid_amount is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'allowed_amount' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where allowed_amount is null\n        union all\n        select\n              claim_id\n            , data_source\n            , 'data_source' as column_checked\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        where data_source is null\n        \n\n)\n\n, test_catalog as (\n\n    select\n          source_table\n        , test_category\n        , test_name\n        , pipeline_test\n    from \"synthea\".\"data_quality\".\"_value_set_test_catalog\"\n\n)\n\nselect\n      test_catalog.source_table\n    , 'all' as claim_type\n    , 'claim_id' as grain\n    , pharmacy_claim_missing.claim_id\n    , pharmacy_claim_missing.data_source\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom pharmacy_claim_missing\n     left join test_catalog\n       on test_catalog.test_name = pharmacy_claim_missing.column_checked||' missing'\n       and test_catalog.source_table = 'normalized_input__pharmacy_claim'\ngroup by\n      pharmacy_claim_missing.claim_id\n    , pharmacy_claim_missing.data_source\n    , test_catalog.source_table\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_pharmacy_claim_missing_values\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:06.265215Z", "completed_at": "2024-02-17T06:17:06.270420Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:06.276513Z", "completed_at": "2024-02-17T06:17:09.212507Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.11326003074646, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.core__medication", "compiled": true, "compiled_code": "\n\n\nselect * from \"synthea\".\"core\".\"_stg_clinical_medication\"", "relation_name": "\"synthea\".\"core\".\"medication\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:09.198464Z", "completed_at": "2024-02-17T06:17:09.207564Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:09.208675Z", "completed_at": "2024-02-17T06:17:09.430115Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3404877185821533, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_pharmacy_header_fail_details", "compiled": true, "compiled_code": "\n\nwith pharmacy_header_duplicates as (\n\n \n        select\n              claim_id\n            , data_source\n            , 'claim_id' as column_checked\n            , count(distinct claim_id) as duplicate_count\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        group by claim_id, data_source\n        having count(distinct claim_id) > 1\n        union all\n        select\n              claim_id\n            , data_source\n            , 'patient_id' as column_checked\n            , count(distinct patient_id) as duplicate_count\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        group by claim_id, data_source\n        having count(distinct patient_id) > 1\n        union all\n        select\n              claim_id\n            , data_source\n            , 'member_id' as column_checked\n            , count(distinct member_id) as duplicate_count\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        group by claim_id, data_source\n        having count(distinct member_id) > 1\n        union all\n        select\n              claim_id\n            , data_source\n            , 'payer' as column_checked\n            , count(distinct payer) as duplicate_count\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        group by claim_id, data_source\n        having count(distinct payer) > 1\n        union all\n        select\n              claim_id\n            , data_source\n            , 'plan' as column_checked\n            , count(distinct plan) as duplicate_count\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        group by claim_id, data_source\n        having count(distinct plan) > 1\n        union all\n        select\n              claim_id\n            , data_source\n            , 'data_source' as column_checked\n            , count(distinct data_source) as duplicate_count\n        from \"synthea\".\"claims_preprocessing\".\"normalized_input_pharmacy_claim\"\n        group by claim_id, data_source\n        having count(distinct data_source) > 1\n        \n\n)\n\n, test_catalog as (\n\n    select\n          source_table\n        , test_category\n        , test_name\n        , pipeline_test\n        , claim_type\n    from \"synthea\".\"data_quality\".\"_value_set_test_catalog\"\n\n)\n\nselect\n      test_catalog.source_table\n    , 'all' as claim_type\n    , 'claim_id' as grain\n    , pharmacy_header_duplicates.claim_id\n    , pharmacy_header_duplicates.data_source\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom pharmacy_header_duplicates\n     left join test_catalog\n       on test_catalog.test_name = pharmacy_header_duplicates.column_checked||' non-unique'\n       and test_catalog.source_table = 'normalized_input__pharmacy_claim'\ngroup by \n      pharmacy_header_duplicates.claim_id\n    , pharmacy_header_duplicates.data_source\n    , test_catalog.source_table\n    , test_catalog.test_category\n    , test_catalog.test_name\n    , test_catalog.pipeline_test", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_pharmacy_header_fail_details\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:09.614525Z", "completed_at": "2024-02-17T06:17:09.626766Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:09.648040Z", "completed_at": "2024-02-17T06:17:09.668443Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.06208944320678711, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__medication_patient_id.0aaf3a0652", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nwith __dbt__cte__quality_measures__stg_core__medication as (\n\n\nselect\n      patient_id\n    , dispensing_date\n    , source_code_type\n    , source_code\n    , ndc_code\n    , rxnorm_code\n    , '2024-02-17 06:16:59.503923+00:00' as tuva_last_run\nfrom \"synthea\".\"core\".\"medication\"\n\n\n) select patient_id\nfrom __dbt__cte__quality_measures__stg_core__medication\nwhere patient_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-17T06:17:09.602582Z", "completed_at": "2024-02-17T06:17:09.607755Z"}, {"name": "execute", "started_at": "2024-02-17T06:17:09.609724Z", "completed_at": "2024-02-17T06:17:09.697520Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.19797921180725098, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_test_detail_stage_pharmacy_claim", "compiled": true, "compiled_code": "\n\nselect distinct\n    source_table\n    , claim_type\n    , grain\n    , claim_id as foreign_key\n    , data_source\n    , test_category\n    , test_name\n    , pipeline_test\nfrom \"synthea\".\"data_quality\".\"_int_claims_preprocessing_pharmacy_claim_duplicates\"\nunion all\nselect distinct\n    source_table\n    , claim_type\n    , grain\n    , claim_id as foreign_key\n    , data_source\n    , test_category\n    , test_name\n    , pipeline_test\nfrom \"synthea\".\"data_quality\".\"_int_claims_preprocessing_pharmacy_claim_missing_values\"\nunion all\nselect distinct\n    source_table\n    , claim_type\n    , grain\n    , claim_id as foreign_key\n    , data_source\n    , test_category\n    , test_name\n    , pipeline_test\nfrom \"synthea\".\"data_quality\".\"_int_claims_preprocessing_pharmacy_header_fail_details\"\nunion all\nselect distinct\n    source_table\n    , claim_type\n    , grain\n    , claim_id as foreign_key\n    , data_source\n    , test_category\n    , test_name\n    , pipeline_test\nfrom \"synthea\".\"data_quality\".\"_int_claims_preprocessing_pharmacy_claim_line_numbers\"", "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_test_detail_stage_pharmacy_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_test_detail", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"claims_preprocessing_test_detail\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_test_detail_source_table.cf991d30ab", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_test_detail_test_category.ced96217c6", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_test_detail_test_name.dba1927ba6", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_summary", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"claims_preprocessing_summary\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_test_result_stage_eligibility", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_test_result_stage_eligibility\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_test_result_stage_medical_claim", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_test_result_stage_medical_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_test_result_stage_pharmacy_claim", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"_int_claims_preprocessing_test_result_stage_pharmacy_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_use_case", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"claims_preprocessing_use_case\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.claims_preprocessing_pipeline_checks_data_quality__claims_preprocessing_summary_.b6e0d43468", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_summary_source_table.69a94b9930", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_summary_test_category.096fbc6a15", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.data_quality__claims_preprocessing_test_result", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"data_quality\".\"claims_preprocessing_test_result\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_use_case_source_table.aa47c26a47", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_use_case_test_name.d9661e41fa", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_use_case_use_case.50708d3a7d", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_eligibility", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_eligibility\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_patient", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_patient\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_pharmacy_claim", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_pharmacy_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_condition", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_condition\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_medical_claim", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_medical_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_procedure", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_procedure\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_encounter", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_encounter\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_test_result_source_table.6995ae2e57", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_test_result_test_category.70042a7a27", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_data_quality__claims_preprocessing_test_result_test_name.745065a5e9", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__eligibility", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"eligibility\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__patient", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"patient\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__pharmacy_claim", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"pharmacy_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__condition", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"condition\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__medical_claim", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"medical_claim\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_location", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_location\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__stg_claims_practitioner", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"_stg_claims_practitioner\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__procedure", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"procedure\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__encounter", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"encounter\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__condition_condition_id.ef1067e2f0", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__medical_claim__claim_id_claim_line_number_.b9ab42f1f0", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__location", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"location\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.core__practitioner", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"core\".\"practitioner\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_core__procedure_procedure_id.feb1b6b4d5", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__member_months", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"financial_pmpm\".\"member_months\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_members", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_members\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_quality_measures__stg_core__patient_sex__female__male__unknown.e6adc9ce2b", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__patient_birth_date.4b3a2e74e6", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__patient_patient_id.5510e1a0fd", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__patient_sex.e2f34cab69", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__count_claim_by_claim_type", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"count_claim_by_claim_type\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__count_claim_by_service_category", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"count_claim_by_service_category\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__sum_amount_by_claim_type", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"sum_amount_by_claim_type\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__sum_amount_by_service_category", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"sum_amount_by_service_category\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__trend_count_claim_by_claim_type", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"trend_count_claim_by_claim_type\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__trend_count_claim_by_service_category", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"trend_count_claim_by_service_category\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__trend_sum_amount_by_claim_type", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"trend_sum_amount_by_claim_type\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__trend_sum_amount_by_service_category", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"trend_sum_amount_by_service_category\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ed_classification__int_map_primary_dx", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"ed_classification\".\"_int_by_provider_parent_organization\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__encounter_patient_id.a0d82e2159", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_encounter\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__count_claim_by_date_column", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"count_claim_by_date_column\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.insights__orphan_claim_by_claim_type", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"insights\".\"orphan_claim_by_claim_type\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_cms_hcc__int_members_patient_id.75e528329b", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_cms_hcc__int_members_patient_id.4d202f2bbb", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__long_condition_category", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"ccsr\".\"long_condition_category\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_hiv_aids", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"chronic_conditions\".\"_int_cms_chronic_condition_hiv_aids\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_prep_conditions", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"hcc_suspecting\".\"_int_prep_conditions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__condition_patient_id.1f1222e348", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__tuva_chronic_conditions_long", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"chronic_conditions\".\"tuva_chronic_conditions_long\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_eligible_conditions", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_eligible_conditions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__patient_spend_with_service_categories", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"financial_pmpm\".\"_int_patient_spend_with_service_categories\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__long_procedure_category", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"ccsr\".\"long_procedure_category\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_all", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"chronic_conditions\".\"_int_cms_chronic_condition_all\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ed_classification__int_filter_encounter_with_classification", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"ed_classification\".\"_int_filter_encounter_with_classification\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_quality_measures__stg_core__procedure_patient_id.0b52ff75d9", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__procedure_ccs", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_procedure_ccs\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_overlap", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_encounter_overlap\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_with_ccs", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_encounter_with_ccs\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__index_discharge_requirement", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_index_discharge_requirement\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__index_time_requirement", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_index_time_requirement\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_demographic_factors", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_demographic_factors\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ccsr__singular_condition_category", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"ccsr\".\"singular_condition_category\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_chronic_conditions__cms_chronic_conditions_hiv_aids_condition__Human_Immunodeficiency_Virus_and_or_Acquired_Immunodeficiency_Syndrome_HIV_AIDS_.c54d45a2c6", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_hiv_aids_claim_id.9baa48027d", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_hiv_aids_condition.da32954f00", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_hiv_aids_patient_id.b6c58add4b", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_all_conditions", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"hcc_suspecting\".\"_int_all_conditions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_chronic_conditions__tuva_chronic_conditions_long__patient_id___condition_.c9509bb46f", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_cms_hcc__int_eligible_conditions_condition_code.e811a078bc", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__service_category_1_allowed_pivot", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"financial_pmpm\".\"_int_service_category_1_allowed_pivot\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__service_category_1_paid_pivot", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"financial_pmpm\".\"_int_service_category_1_paid_pivot\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__service_category_2_allowed_pivot", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"financial_pmpm\".\"_int_service_category_2_allowed_pivot\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__service_category_2_paid_pivot", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"financial_pmpm\".\"_int_service_category_2_paid_pivot\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_all_claim_id.84015aec48", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_all_condition.bb780b4840", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_all_patient_id.95fc066008", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.ed_classification__summary", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"ed_classification\".\"summary\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_exclude_colectomy_cancer", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_exclude_colectomy_cancer\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_exclude_hospice_palliative", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_exclude_hospice_palliative\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_denominator", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_denominator\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_denominator", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_denominator\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__readmission_crude", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_readmission_crude\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_data_quality", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_encounter_data_quality\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_specialty_cohort", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_encounter_specialty_cohort\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__exclusion", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_exclusion\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__planned_encounter", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_planned_encounter\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_cms_hcc__int_demographic_factors__patient_id_model_version_.21c6216400", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_ccsr__singular_condition_category_claim_id.41e0e51ac8", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_ccsr__singular_condition_category_claim_id.21b76e504b", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__int_patient_hcc_history", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"hcc_suspecting\".\"_int_patient_hcc_history\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__tuva_chronic_conditions_wide", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"chronic_conditions\".\"tuva_chronic_conditions_wide\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_hcc_mapping", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_hcc_mapping\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__pmpm_prep", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"financial_pmpm\".\"pmpm_prep\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_oud", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"chronic_conditions\".\"_int_cms_chronic_condition_oud\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034__frailty", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034__frailty\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_exclude_institutional_snp", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_exclude_institutional_snp\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_numerator", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_numerator\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372__frailty", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372__frailty\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_exclude_hospice", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_exclude_hospice\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_exclude_institutional", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_exclude_institutional\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_exclude_mastectomy", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_exclude_mastectomy\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_exclude_palliative", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_exclude_palliative\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_numerator", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_numerator\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__index_admission", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"_int_index_admission\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_enrollment_interaction_factors", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_enrollment_interaction_factors\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__list", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"hcc_suspecting\".\"list\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__tuva_chronic_conditions_wide_patient_id.705b1ca561", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_chronic_conditions__tuva_chronic_conditions_wide_patient_id.02386b9158", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_hcc_hierarchy", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_hcc_hierarchy\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_financial_pmpm__pmpm_prep__patient_id___year_month___plan_.b941ddaf9e", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.accepted_values_chronic_conditions__cms_chronic_conditions_oud_condition__Opioid_Use_Disorder_OUD_.f44489eec5", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_oud_claim_id.7ee5fe28fe", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_oud_condition.6800b245ea", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_oud_patient_id.382354e0d0", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_exclude_advanced_illness", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_exclude_advanced_illness\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_exclude_dementia", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_exclude_dementia\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_exclude_advanced_illness", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_exclude_advanced_illness\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_exclude_dementia", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_exclude_dementia\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__encounter_augmented", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"encounter_augmented\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.hcc_suspecting__summary", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"hcc_suspecting\".\"summary\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_disabled_interaction_factors", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_disabled_interaction_factors\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_disease_factors", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_disease_factors\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_disease_interaction_factors", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_disease_interaction_factors\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__int_hcc_count_factors", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"_int_hcc_count_factors\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.financial_pmpm__pmpm", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"financial_pmpm\".\"pmpm\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_long", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"chronic_conditions\".\"cms_chronic_conditions_long\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_exclusions", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_exclusions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_exclusions", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_exclusions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.readmissions__readmission_summary", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"readmissions\".\"readmission_summary\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__patient_risk_factors", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"patient_risk_factors\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_long_claim_id.74242d2abc", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_long_condition.e794460ae3", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_long_patient_id.551c145c85", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_chronic_conditions__cms_chronic_conditions_long__patient_id_claim_id_start_date_condition_.fba1518320", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf0034_long", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf0034_long\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__int_nqf2372_long", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"_int_nqf2372_long\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.cms_hcc__patient_risk_scores", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"cms_hcc\".\"patient_risk_scores\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.chronic_conditions__cms_chronic_conditions_wide", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"chronic_conditions\".\"cms_chronic_conditions_wide\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__summary_long", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"summary_long\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_cms_hcc__patient_risk_scores_patient_id.05b154e126", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-2 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.not_null_chronic_conditions__cms_chronic_conditions_wide_patient_id.5c2c8ae105", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.the_tuva_project.unique_chronic_conditions__cms_chronic_conditions_wide_patient_id.60c2d9a586", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__summary_counts", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"summary_counts\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.the_tuva_project.quality_measures__summary_wide", "compiled": false, "compiled_code": null, "relation_name": "\"synthea\".\"quality_measures\".\"summary_wide\""}], "elapsed_time": 9.654343605041504, "args": {"log_file_max_bytes": 10485760, "project_dir": "/workspaces/synthea_dw/tuva", "show": false, "log_level_file": "debug", "quiet": false, "profiles_dir": "/workspaces/synthea_dw/tuva", "favor_state": false, "log_format": "default", "partial_parse_file_diff": true, "log_level": "info", "select": [], "strict_mode": false, "log_format_file": "debug", "defer": false, "cache_selected_only": false, "send_anonymous_usage_stats": true, "static_parser": true, "print": true, "macro_debugging": false, "partial_parse": true, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "which": "build", "introspect": true, "include_saved_query": false, "indirect_selection": "eager", "log_path": "/workspaces/synthea_dw/tuva/logs", "printer_width": 80, "show_resource_report": false, "write_json": true, "use_colors": true, "invocation_command": "dbt build", "enable_legacy_logger": false, "exclude": [], "vars": {}, "resource_types": [], "version_check": true, "use_colors_file": true}}